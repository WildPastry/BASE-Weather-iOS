name: Prepare release
run-name: Prepare release | ${{ github.run_id }} | branch - ${{ github.ref }}

on:
  pull_request:
    types: [opened]
    branches:
      - main

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    if: (startsWith(github.head_ref, 'release/major') || startsWith(github.head_ref, 'release/minor') || startsWith(github.head_ref, 'release/patch'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Git config
        run: |
          git config --global user.email "${{ secrets.GH_ADMIN_EMAIL }}"
          git config --global user.name "${{ secrets.GH_ADMIN_USERNAME }}"

      - name: Checkout release branch
        run: |
          git fetch
          git checkout ${{ github.event.pull_request.head.ref }}

      - name: Apply version bump (major)
        if: startsWith(github.ref, 'refs/heads/release/major')
        run: npm version major

      - name: Apply version bump (minor)
        if: startsWith(github.ref, 'refs/heads/release/minor')
        run: npm version minor

      - name: Apply version bump (patch)
        if: startsWith(github.ref, 'refs/heads/release/patch')
        run: npm version patch

      - name: Update app.json version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx json -I -f app.json -e "this.expo.version='$VERSION'"

      - name: Update app.json versionCode
        run: |
          CURRENT_VERSION_CODE=$(node -p "require('./app.json').expo.versionCode")
          NEW_VERSION_CODE=$((CURRENT_VERSION_CODE + 1))
          npx json -I -f app.json -e "this.expo.versionCode='$NEW_VERSION_CODE'"
          git commit -m "Update app.json versionCode to $NEW_VERSION_CODE" app.json

      - name: Git push version bump
        run: |
          git push
